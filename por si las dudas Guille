UTA ultimoTipo;

FILE* cantidadTotalDeTipos;
FILE* ultimosTipos;
cantidadTotalDeTipos = fopen("cantidadTotalDeTipos.txt", "rb");
ultimosTipos = fopen("ultimosTipos.txt", "rb");

fread(&cantidadTipos, sizeof(int), 1, cantidadTotalDeTipos);
tipos vecTipos[cantidadTipos];
fclose(cantidadTotalDeTipos);

for(i = 0; i < cantidadTipos; i++){

fread(&ultimoTipo, sizeof(UTA), 1, ultimosTipos);

vecTipos[i].idTipo = ultimoTipo.idTipo;
for(j = 0; ultimoTipo.nombreTipo[j] != '\0'; j++){
vecTipos[i].nombreTipo[j] = ultimoTipo.nombreTipo[j];
}
for(j = 0; j < 5; j++){
vecTipos[i].pasos[j] = ultimoTipo.pasos[j];
}
vecTipos[i].cantidadDoc = ultimoTipo.cantidadDoc;
for(j = 0; j < 5; j++){
vecTipos[i].tiempoPromedioPorTipoPorArea[j] = ultimoTipo.tiempoPromedioPorTipoPorArea[j];
}
for(j = 0; j < 5; j++){
vecTipos[i].desviacionTipicaPorArea[j] = ultimoTipo.desviacionTipicaPorArea[j];
}

}
fclose(ultimosTipos);



----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------




void guardarTipos(tipos vecTipos[cantidadTipos]){

    UTA ultimoTipo;

    FILE* cantidadTotalDeTipos;
    FILE* ultimosTipos;
    cantidadTotalDeTipos = fopen("cantidadTotalDeTipos.txt", "wb");
    ultimosTipos = fopen("ultimosTipos.txt", "wb");

    fwrite(&cantidadTipos, sizeof(int), 1, cantidadTotalDeTipos);

    for(i = 0; i < cantidadTipos; i++){
        ultimoTipo.idTipo = vecTipos[i].idTipo;
        for(j = 0; vecTipos[i].nombreTipo[j] != '\0'; j++){
            ultimoTipo.nombreTipo[j] = vecTipos[i].nombreTipo[j];
        }
        for(j = 0; j < 5; j++){
            ultimoTipo.pasos[j] = vecTipos[i].pasos[j];
        }
        ultimoTipo.cantidadDoc = vecTipos[i].cantidadDoc;
        for(j = 0; j < 5; j++){
            ultimoTipo.tiempoPromedioPorTipoPorArea[j] = vecTipos[i].tiempoPromedioPorTipoPorArea[j];
        }
        for(j = 0; j < 5; j++){
            ultimoTipo.desviacionTipicaPorArea[j] = vecTipos[i].desviacionTipicaPorArea[j];
        }

        fwrite(&ultimoTipo, sizeof(UTA), 1, cantidadTotalDeTipos);
    }

    return ;
}
